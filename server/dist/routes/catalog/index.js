"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const RoleController_1 = __importDefault(require("../../controllers/catalog/RoleController"));
const DocTypeController_1 = __importDefault(require("../../controllers/catalog/DocTypeController"));
const CurrencyTypeController_1 = __importDefault(require("../../controllers/catalog/CurrencyTypeController"));
const EstadoController_1 = __importDefault(require("../../controllers/catalog/EstadoController"));
const TimbradoController_1 = __importDefault(require("../../controllers/catalog/TimbradoController"));
const PaymentMethodController_1 = __importDefault(require("../../controllers/catalog/PaymentMethodController"));
const FallaController_1 = __importDefault(require("../../controllers/catalog/FallaController"));
const PersonTypeController_1 = __importDefault(require("../../controllers/catalog/PersonTypeController"));
const ProgramTypeController_1 = __importDefault(require("../../controllers/catalog/ProgramTypeController"));
const PersonController_1 = __importDefault(require("../../controllers/catalog/PersonController"));
const EmpresaController_1 = __importDefault(require("../../controllers/catalog/EmpresaController"));
const MotivoController_1 = __importDefault(require("../../controllers/catalog/MotivoController"));
const CajaController_1 = __importDefault(require("../../controllers/catalog/CajaController"));
const CajaUsuarioController_1 = __importDefault(require("../../controllers/catalog/CajaUsuarioController"));
const DispositivoController_1 = __importDefault(require("../../controllers/catalog/DispositivoController"));
const CategoriaIvaController_1 = __importDefault(require("../../controllers/catalog/CategoriaIvaController"));
const ProgramController_1 = __importDefault(require("../../controllers/catalog/ProgramController"));
const GrupoController_1 = __importDefault(require("../../controllers/catalog/GrupoController"));
const MarcaController_1 = __importDefault(require("../../controllers/catalog/MarcaController"));
const ModeloController_1 = __importDefault(require("../../controllers/catalog/ModeloController"));
const ItemController_1 = __importDefault(require("../../controllers/catalog/ItemController"));
const catalogRouter = (0, express_1.Router)();
catalogRouter.get('/roles', RoleController_1.default.list);
catalogRouter.post('/roles', RoleController_1.default.create);
catalogRouter.get('/roles/:codigo', RoleController_1.default.detail);
catalogRouter.put('/roles/:codigo', RoleController_1.default.update);
catalogRouter.delete('/roles/:codigo', RoleController_1.default.remove);
catalogRouter.post('/roles/:codigo/programs', RoleController_1.default.addProgram);
catalogRouter.delete('/roles/:codigo/programs/:programaCodigo', RoleController_1.default.removeProgram);
catalogRouter.get('/doc-types', DocTypeController_1.default.list);
catalogRouter.post('/doc-types', DocTypeController_1.default.create);
catalogRouter.put('/doc-types/:codigo', DocTypeController_1.default.update);
catalogRouter.delete('/doc-types/:codigo', DocTypeController_1.default.remove);
catalogRouter.get('/currencies', CurrencyTypeController_1.default.list);
catalogRouter.post('/currencies', CurrencyTypeController_1.default.create);
catalogRouter.put('/currencies/:codigo', CurrencyTypeController_1.default.update);
catalogRouter.delete('/currencies/:codigo', CurrencyTypeController_1.default.remove);
catalogRouter.get('/states', EstadoController_1.default.list);
catalogRouter.post('/states', EstadoController_1.default.create);
catalogRouter.put('/states/:codigo', EstadoController_1.default.update);
catalogRouter.delete('/states/:codigo', EstadoController_1.default.remove);
catalogRouter.get('/timbrados', TimbradoController_1.default.list);
catalogRouter.post('/timbrados', TimbradoController_1.default.create);
catalogRouter.put('/timbrados/:codigo', TimbradoController_1.default.update);
catalogRouter.delete('/timbrados/:codigo', TimbradoController_1.default.remove);
catalogRouter.get('/payment-methods', PaymentMethodController_1.default.list);
catalogRouter.post('/payment-methods', PaymentMethodController_1.default.create);
catalogRouter.put('/payment-methods/:codigo', PaymentMethodController_1.default.update);
catalogRouter.delete('/payment-methods/:codigo', PaymentMethodController_1.default.remove);
catalogRouter.get('/fallas', FallaController_1.default.list);
catalogRouter.post('/fallas', FallaController_1.default.create);
catalogRouter.put('/fallas/:codigo', FallaController_1.default.update);
catalogRouter.delete('/fallas/:codigo', FallaController_1.default.remove);
catalogRouter.get('/person-types', PersonTypeController_1.default.list);
catalogRouter.post('/person-types', PersonTypeController_1.default.create);
catalogRouter.put('/person-types/:codigo', PersonTypeController_1.default.update);
catalogRouter.delete('/person-types/:codigo', PersonTypeController_1.default.remove);
catalogRouter.get('/program-types', ProgramTypeController_1.default.list);
catalogRouter.post('/program-types', ProgramTypeController_1.default.create);
catalogRouter.put('/program-types/:codigo', ProgramTypeController_1.default.update);
catalogRouter.delete('/program-types/:codigo', ProgramTypeController_1.default.remove);
catalogRouter.get('/programs', ProgramController_1.default.list);
catalogRouter.post('/programs', ProgramController_1.default.create);
catalogRouter.put('/programs/:codigo', ProgramController_1.default.update);
catalogRouter.delete('/programs/:codigo', ProgramController_1.default.remove);
catalogRouter.get('/persons', PersonController_1.default.list);
catalogRouter.post('/persons', PersonController_1.default.create);
catalogRouter.get('/persons/:codigo', PersonController_1.default.detail);
catalogRouter.put('/persons/:codigo', PersonController_1.default.update);
catalogRouter.delete('/persons/:codigo', PersonController_1.default.remove);
catalogRouter.post('/persons/:codigo/types', PersonController_1.default.addType);
catalogRouter.delete('/persons/:codigo/types/:tipoCodigo', PersonController_1.default.removeType);
catalogRouter.get('/companies', EmpresaController_1.default.list);
catalogRouter.post('/companies', EmpresaController_1.default.create);
catalogRouter.put('/companies/:codigo', EmpresaController_1.default.update);
catalogRouter.delete('/companies/:codigo', EmpresaController_1.default.remove);
catalogRouter.get('/motives', MotivoController_1.default.list);
catalogRouter.post('/motives', MotivoController_1.default.create);
catalogRouter.put('/motives/:codigo', MotivoController_1.default.update);
catalogRouter.delete('/motives/:codigo', MotivoController_1.default.remove);
catalogRouter.get('/cash-registers', CajaController_1.default.list);
catalogRouter.post('/cash-registers', CajaController_1.default.create);
catalogRouter.put('/cash-registers/:codigo', CajaController_1.default.update);
catalogRouter.delete('/cash-registers/:codigo', CajaController_1.default.remove);
catalogRouter.get('/cash-register-users', CajaUsuarioController_1.default.overview);
catalogRouter.post('/cash-register-users', CajaUsuarioController_1.default.create);
catalogRouter.delete('/cash-register-users/:cajaCodigo/:usuarioCodigo', CajaUsuarioController_1.default.remove);
catalogRouter.get('/devices', DispositivoController_1.default.list);
catalogRouter.post('/devices', DispositivoController_1.default.create);
catalogRouter.put('/devices/:codigo', DispositivoController_1.default.update);
catalogRouter.delete('/devices/:codigo', DispositivoController_1.default.remove);
catalogRouter.get('/inventory/taxes', CategoriaIvaController_1.default.list);
catalogRouter.post('/inventory/taxes', CategoriaIvaController_1.default.create);
catalogRouter.put('/inventory/taxes/:codigo', CategoriaIvaController_1.default.update);
catalogRouter.delete('/inventory/taxes/:codigo', CategoriaIvaController_1.default.remove);
catalogRouter.get('/inventory/groups', GrupoController_1.default.list);
catalogRouter.post('/inventory/groups', GrupoController_1.default.create);
catalogRouter.put('/inventory/groups/:codigo', GrupoController_1.default.update);
catalogRouter.delete('/inventory/groups/:codigo', GrupoController_1.default.remove);
catalogRouter.get('/inventory/brands', MarcaController_1.default.list);
catalogRouter.post('/inventory/brands', MarcaController_1.default.create);
catalogRouter.put('/inventory/brands/:codigo', MarcaController_1.default.update);
catalogRouter.delete('/inventory/brands/:codigo', MarcaController_1.default.remove);
catalogRouter.get('/inventory/models', ModeloController_1.default.list);
catalogRouter.post('/inventory/models', ModeloController_1.default.create);
catalogRouter.put('/inventory/models/:codigo', ModeloController_1.default.update);
catalogRouter.delete('/inventory/models/:codigo', ModeloController_1.default.remove);
catalogRouter.get('/inventory/items', ItemController_1.default.list);
catalogRouter.post('/inventory/items', ItemController_1.default.create);
catalogRouter.put('/inventory/items/:codigo', ItemController_1.default.update);
catalogRouter.delete('/inventory/items/:codigo', ItemController_1.default.remove);
exports.default = catalogRouter;
//# sourceMappingURL=index.js.map